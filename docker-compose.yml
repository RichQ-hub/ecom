services:
  backend:
    build: ./backend
    ports:
      - "5555:5000" # mapping the external port 5555 to container's internal port 5000 (on your computer use localhost:5555)
    environment: # environment variables required for flask
      - FLASK_ENV=development
      - FLASK_APP=app.py
    volumes:
      - ./backend:/backendapp # similar to below, this means when we make flask changes, it reloads in container
    # command: flask run --host=0.0.0.0 --reload # this overrides the CMD in the Dockerfile and runs flask
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5555/companies?search_query=&offset=0"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s

  frontend:
    build: ./frontend
    ports:
      - "3333:3000" # mapping the external port 3333 to container's internal port 3000 (on your computer use localhost:3333)
    volumes: # every time you make a change, this will reload the changes in the container
      - ./frontend/src:/frontendapp # write these as ./<path to folder>:/<path to folder in container>
    environment:
      - VITE_REACT_BACKEND_URL=http://localhost:5555 # this defines the URL the frontend makes requests to
    depends_on: # ensures that this container is built only after the backend healthchecks are positive.
      backend:
        condition: service_healthy
        restart: true
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /usr/src/app
          ignore:
            - ./frontend/node_modules/

  frontend-testing:
    build: ./frontend
    volumes: # every time you make a change, this will reload the changes in the container
      - ./frontend/src:/frontendapp # write these as ./<path to folder>:/<path to folder in container>
    environment:
      - VITE_REACT_BACKEND_URL=http://localhost:5555 # this defines the URL the frontend makes requests to
    depends_on: # ensures that this container is built only after the backend healthchecks are positive.
      backend:
        condition: service_healthy
        restart: true
    profiles: [test]
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /usr/src/app
          ignore:
            - ./frontend/node_modules/
    command: yarn test
    
  db:
    image: mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: "db"
      MYSQL_ROOT_PASSWORD: "23erf23"
    volumes:
      - my-db:/var/lib/mysql

volumes:
  my-db:
